{"name":"Zollty-mvc","tagline":"The ZolltyMVC is a lightweight Java MVC Framework. It can help development teams build simple, portable, fast and flexible Java applications.","body":"ZolltyMVC\r\n==========\r\n    \r\nWhat is ZolltyMVC \r\n----------------------------\r\n\r\nThe ZolltyMVC is a lightweight Java MVC Framework.  \r\nIt can help development teams build simple, portable, fast and flexible Java applications.\r\n \r\n##### 1.It's an IoC container \r\nIts DI function is very powerful, support method injection, support to create bean using method's return value...  \r\nIts BeanFactory is highly extensible, support ClassPathXmlApplicationContext, ClassPathAnnotationApplicationContext, WebXmlApplicationContext, and so on. \r\n \r\n##### 2.It's a lightweight MVC Framework \r\nSupport REST-ful, nice url customization, chained interceptor, ...and so on.  \r\nIt's reliable and efficient, much more easy than SpringMVC, and it's faster.  \r\nOnly one jar, no dependence, which includes it's most functions!  \r\nIt's flexible, you can overwrite its API to extend its functionality.   \r\n\r\n\r\nHow to use it \r\n---------------------------------------\r\n\r\n###### a hello word sample  \r\n```java\r\n @Controller\r\n public class UserController{\r\n\r\n   @RequestMapping(\"/admin/logout\")\r\n   public View logout(HttpServletRequest request){\r\n          try {\r\n            request.getSession().invalidate();\r\n          }catch (Exception e) {\r\n\t\t  }\r\n          return new RedirectView(\"/admin?info=bye\");\r\n   }\r\n   \r\n   @RequestMapping(\"/admin/login\")\r\n   public View login( \r\n           @HttpParam(\"userName\")String userName, \r\n           @HttpParam(\"password\")String password) { \r\n\t\t   \r\n          // do something...\r\n  \r\n          return new JspView(\"/admin/main.jsp\"); \r\n   }\r\n }\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}